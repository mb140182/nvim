lspsaga
linter
debug

# +++ TOD0
# TODO: add hot keys
# PERF:
# HACK: figna
# TODO: using namespace std;
# NOTE:
# FIX:: 
# FIXME: Pkjf
# XXX:
# :TodoQuckFix
# :TodoLockList
# :TodoTelescope
# 000 TOD0

# Telescope find_files
# Telescope live_grep
# C-t -- open in new tab

# Чтобы отобразить скрытые файлы в Neovim Neotree, можно использовать клавишу H (или Shift+H). 





  after/ftplugin/cpp/cpp.lua - разобратся с путями содержимым файла и почему print отрабатывает два раза
  conform  - разобратся что и как делает(тупо скопирован из kickstart)
  gitsigns  - разобратся что и как делает(тупо скопирован из kickstart)
  which_key  - разобратся что и как делает(тупо скопирован из kickstart)
  trouble  - разобратся что и как делает(тупо скопирован из kickstart, но это не точно)
  todo-comments  - разобратся что и как делает(тупо скопирован из kickstart)
  telescope  - разобратся что и как делает(тупо скопирован из kickstart)
  neo-tree  - разобратся что и как делает(тупо скопирован из kickstart)
  
  lint  - разобратся что и как делает(тупо скопирован из kickstart)
  lspconfig  - разобратся что и как делает(тупо скопирован из kickstart)
  mini  - разобратся что и как делает(тупо скопирован из kickstart)

  lsp
  saghen/blink.cmp  - разобратся что и как делает(тупо скопирован из kickstart) XXX precompiled https://cmp.saghen.dev/
  debug  - разобратся что и как делает(тупо скопирован из kickstart)
  treesitter  - разобратся что и как делает(тупо скопирован из kickstart)
  indent_line  - разобратся что и как делает(тупо скопирован из kickstart)


--commen plug key
  NORMAL mode
  `gcc` - Toggles the current line using linewise comment
  `gbc` - Toggles the current line using blockwise comment
  `[count]gcc` - Toggles the number of line given as a prefix-count using linewise
  `[count]gbc` - Toggles the number of line given as a prefix-count using blockwise
  `gc[count]{motion}` - (Op-pending) Toggles the region using linewise comment
  `gb[count]{motion}` - (Op-pending) Toggles the region using blockwise comment
  VISUAL mode
  `gc` - Toggles the region using linewise comment
  `gb` - Toggles the region using blockwise comment
--commen plug key


key ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      --vim.keymap.set('n', '<leader>tq', "<cmd>BufExplorer<cr>", { desc = '[B]ufExplorer [W]ord' }),  --rabotaet
--Dla primera
      --vim.keymap.set('n', '<leader>tq', "<cmd>BufferListOpen<cr>", { desc = '[S]earch current [W]ord' }),  --rabotaet

    --keys = {
      --{
        --'<leader>f',
        --function()
          --require('conform').format { async = true, lsp_format = 'fallback' }
        --end,
        --mode = '',
        --desc = '[F]ormat buffer',
      --},
    --},
key --------------------------------------------------------------------------------
